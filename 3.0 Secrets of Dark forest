/* Проект «Секреты Тёмнолесья»
 * Цель проекта: изучить влияние характеристик игроков и их игровых персонажей 
 * на покупку внутриигровой валюты «райские лепестки», а также оценить 
 * активность игроков при совершении внутриигровых покупок
 * 
 * Автор: Мусабаева А.Т.
 * Дата: 03.10.2024
*/

-- Часть 1. Исследовательский анализ данных
-- Задача 1. Исследование доли платящих игроков
--Рассчитываем долю платящих игроков по расе
SELECT r.race,
--рассчитываем количество игроков, количество игроков совершивших оплату и  % оплаты по расам
		count(u.id) AS total_race_users,
		sum(u.payer) AS  total_race_payer_users,
		sum(u.payer) /count(u.id):: float AS total_payer_race_users_share,
--рассчитываем количество игроков, количество игроков совершивших оплату и  % оплаты по всем игрокам	
				SUM(count(u.id)) OVER () AS total_payer_users,
				SUM(SUM(u.payer)) OVER () AS total_payer_users,
       			SUM(SUM(u.payer)) OVER () / SUM(COUNT(u.id)) OVER ()::float AS total_payer_users_share,
 --рассчитываем % оплаты игроков по расам в разресе тотал игроков (удельный вес по расам, совершивших оплату) 
 				sum(u.payer)/ SUM(SUM(u.payer)) OVER ()::float AS total_race_from_payer_users_share
FROM fantasy.users AS u 
LEFT JOIN fantasy.race AS r using(race_id)
GROUP BY r.race

--race    |total_race_users|total_race_payer_users|total_payer_race_users_share|total_payer_users|total_payer_users|total_payer_users_share|total_race_from_payer_users_share|
--------+----------------+----------------------+----------------------------+-----------------+-----------------+-----------------------+---------------------------------+
--Angel   |            1327|                   229|         0.17256970610399397|            22214|             3929|    0.17687044206356353|              0.05828455077627895|
--Elf     |            2501|                   427|         0.17073170731707318|            22214|             3929|    0.17687044206356353|                0.108679053194197|
--Demon   |            1229|                   238|           0.193653376729048|            22214|             3929|    0.17687044206356353|              0.06057520997709341|
--Orc     |            3619|                   636|         0.17573915446255872|            22214|             3929|    0.17687044206356353|              0.16187325019088827|
--Human   |            6328|                  1114|         0.17604298356510745|            22214|             3929|    0.17687044206356353|              0.28353270552303383|
--Northman|            3562|                   626|         0.17574396406513196|            22214|             3929|    0.17687044206356353|              0.15932807330109441|
--Hobbit  |            3648|                   659|          0.1806469298245614|            22214|             3929|    0.17687044206356353|               0.1677271570374141|


--Всего 22,214 игроков, из которых покупали валюту “райские лепестки” 3,929 (18%). В разрезе рас наибольший удельный вес по покупке занимает раса “Human”, 
--что не удивительно с учетом того что там находится большая часть игроков.
Если обратить внимание на оплаты игроков совершенные в разрезе расы, то можно обратить внимание на расу “Demon” удельный вес игроков, совершивших покупку 
--валюты внутри расы 20%, что выше среднего показателя по всем игрокам. Возможно для конкретной расы существует более востребованные и интересные эпические 
--предметы либо они дают доролнительные фичи для игроков  этой расы. 

-- 1.1. Доля платящих пользователей по всем данным:
-- Напишите ваш запрос здесь
SELECT count(id) AS total_users,
sum(u.payer) AS  total_payer_users,
sum(u.payer) /count(id):: float AS payer_users_share
FROM fantasy.users u 

--total_users|total_payer_users|payer_users_share  |
-----------+-----------------+-------------------+
--      22214|             3929|0.17687044206356353|

-- 1.2. Доля платящих пользователей в разрезе расы персонажа:
-- Напишите ваш запрос здесь
SELECT r.race,
--рассчитываем количество игроков, количество игроков совершивших оплату и  % оплаты по расам
		count(u.id) AS total_race_users,
		sum(u.payer) AS  total_race_payer_users,
		sum(u.payer)/ SUM(SUM(u.payer)) OVER ()::float AS total_race_from_payer_users_share
FROM fantasy.users AS u 
LEFT JOIN fantasy.race AS r using(race_id)
GROUP BY r.race

--race    |total_race_users|total_race_payer_users|total_race_from_payer_users_share|
--------+----------------+----------------------+---------------------------------+
--Angel   |            1327|                   229|              0.05828455077627895|
--Elf     |            2501|                   427|                0.108679053194197|
--Demon   |            1229|                   238|              0.06057520997709341|
--Orc     |            3619|                   636|              0.16187325019088827|
--Human   |            6328|                  1114|              0.28353270552303383|
--Northman|            3562|                   626|              0.15932807330109441|
--Hobbit  |            3648|                   659|               0.1677271570374141|

-- Задача 2. Исследование внутриигровых покупок
-- 2.1. Статистические показатели по полю amount:
-- Напишите ваш запрос здесь
SELECT COUNT(transaction_id) AS total_purch,
		sum(amount) AS total_purch_amount,
		min(amount) AS min_purch_amount,
		max(amount) AS max_purch_amount,
		AVG(amount) AS avg_purch_amount,
		percentile_cont(0.5) WITHIN group(ORDER BY amount) AS percentile_50,
		stddev(amount) AS stand_dev
FROM fantasy.events
--total_purch|total_purch_amount|min_purch_amount|max_purch_amount|avg_purch_amount |percentile_50    |stand_dev        |
----------+------------------+----------------+----------------+-----------------+-----------------+-----------------+
--   1307678|         686615040|             0.0|        486615.1|525.6919663589833|74.86000061035156|2517.345444427788|


--Всего было совершено 1,307,678  внутриигровых покупок
--Минимальная стоимость покупки 0
--Максимальная стоимость 486,615
--Среднее значение — 525.69, а медиана — 74.86. Это говорит о том, что большинство значений в наборе данных ближе к медиане, 
--то есть около 74.86, а среднее значение значительно выше из-за наличия более крупных значений (возможно 0 покупок), 
--которые смещают среднее вверх.Такое расхождение между медианой и средним может свидетельствовать о неравномерности распределения данных или их асимметрии.
--В нашем случае стандартное отклонение составляет 2517.35, что говорит о значительном разбросе данных вокруг среднего значения (525.69).
--Большое значение стандартного отклонения относительно среднего говорит о том, что данные сильно варьируются — существует большое количество значений, которые значительно отличаются от среднего. 
   
-- 2.2: Аномальные нулевые покупки:
-- Напишите ваш запрос здесь
SELECT COUNT(transaction_id) AS count_0_amount,
		(SELECT COUNT (transaction_id) 
		FROM fantasy.events) AS total_amount_count,
		COUNT(transaction_id)::float/
		(SELECT COUNT (transaction_id) 
		FROM fantasy.events) AS share_0_amount
FROM fantasy.events
WHERE amount=0

--t_0_amount|total_amount_count|share_0_amount
----------+------------------+--------------
--       907|           1307678|0.000693595824

 --Доля аномальных покупок <1%

-- 2.3: Сравнительный анализ активности платящих и неплатящих игроков:
-- Напишите ваш запрос здесь
SELECT 'yes' AS is_payer,
		COUNT(id) AS user_count,
       SUM(transaction_id_num) AS total_transactions,
       SUM(rev) AS total_revenue,
       AVG(rev) AS avg_revenue,
       SUM(transaction_id_num)/COUNT(id) AS purch_per_user
FROM (
    SELECT e.id,
           COUNT(e.transaction_id) AS transaction_id_num,
           SUM(e.amount) AS rev
    FROM fantasy.events AS e
    LEFT JOIN fantasy.users AS u ON e.id = u.id
    WHERE e.amount > 0 AND u.payer = 1
    GROUP BY e.id
) AS subquery_1
--
UNION
--
SELECT 'no' AS is_payer,
		COUNT(id) AS user_count,
       SUM(transaction_id_num) AS total_transactions,
       SUM(rev) AS total_revenue,
       AVG(rev) AS avg_revenue,
       SUM(transaction_id_num)/COUNT(id) AS purch_per_user
FROM (
    SELECT e.id,
           COUNT(e.transaction_id) AS transaction_id_num,
           SUM(e.amount) AS rev
    FROM fantasy.events AS e
    LEFT JOIN fantasy.users AS u ON e.id = u.id
    WHERE e.amount > 0 AND u.payer = 0
    GROUP BY e.id
) AS subquery_2

--is_payer|user_count|total_transactions|total_revenue|avg_revenue      |purch_per_user     |
--------+----------+------------------+-------------+-----------------+-------------------+
--no      |     11348|           1107145|    551872064|48631.73788673072|97.5630066972153683|
--yes     |      2444|            199626|    135563056| 55467.7366201961|81.6800327332242226|

--62% игроков сделали внутриигровые покупки, из которых 11% оплатили с помощью райских лепестков (2,444 vs 22,214). 
--Средняя выручка на игрока выше среди тех, кто использует «райские лепестки», что указывает на необходимость мотивации игроков к использованию этой валюты. 
--При этом игроки, не использующие игровую валюту, приобретают больше товаров на единицу, что может свидетельствовать о специфике и потенциальных сложностях конвертации игровой валюты.

-- 2.4: Популярные эпические предметы:
-- Напишите ваш запрос здесь
WITH user_item AS (
SELECT i.game_items,
       COUNT(e.transaction_id) AS item_num,
       COUNT(e.transaction_id)::float / 
       (SELECT COUNT(e2.transaction_id)
        FROM fantasy.events AS e2
        WHERE e2.amount > 0) AS total_item_num, -- w/o 0 amount
       COUNT(DISTINCT e.id) AS user_per_item,
       (SELECT count(DISTINCT id)
		FROM fantasy.events
		WHERE amount>0) as total_purch_user-->>добавила все ид из таблицы с покупками, где сумма>0
FROM fantasy.events e
LEFT JOIN fantasy.items i ON e.item_code = i.item_code
WHERE e.amount > 0
GROUP BY i.game_items
)
SELECT *,
		user_per_item::float/total_urch_user AS total_user_per_item-->>доля от игроков, которые хотя бы раз купили любой эпический предмет
FROM user_item
ORDER BY user_per_item DESC

--game_items               |item_num|total_item_num       |user_per_item|total_urch_user|total_user_per_item  |
-------------------------+--------+---------------------+-------------+---------------+---------------------+
--Book of Legends          | 1004516|   0.7687008664869361|        12194|          13792|   0.8841357308584686|
--Bag of Holding           |  271875|   0.2080509898061711|        11968|          13792|   0.8677494199535963|
--Necklace of Wisdom       |   13828| 0.010581808136238102|         1627|          13792|   0.1179669373549884|
--Gems of Insight          |    3833|0.0029331841615707725|          926|          13792|  0.06714037122969838|
--Treasure Map             |    3183|0.0024357748985859035|          819|          13792| 0.059382250580046404|

--Процент покупок от общего числа покупок:
--Book of Legends: 77% всех внутриигровых покупок приходится на этот предмет, что делает его самым популярным.
--Bag of Holding: 21% покупок.
--Necklace: Лишь 1% от всех покупок приходится на данный предмет.
--Доля игроков, которые хотя бы раз покупали этот предмет :
--Book of Legends: 88% игроков приобрели этот предмет хотя бы один раз.
--Bag of Holding: 87% игроков.
--Necklace: 12% игроков.
--Вывод:
--Самым популярным предметом по количеству продаж является Book of Legends, на который приходится подавляющая доля внутриигровых покупок (77%). 
--Однако его приобрели 88% игроков, как и Bag of Holding, что может говорить о том, что эти два предмета имеют схожую популярность среди игроков, но Book of Legends покупают чаще.

-- Часть 2. Решение ad hoc-задач
-- Задача 1. Зависимость активности игроков от расы персонажа:
-- Напишите ваш запрос здесь
SELECT r.race,
       COUNT(DISTINCT u.id) AS total_players,--Сначала для каждой расы посчитайте общее количество зарегистрированных игроков.
        COUNT(DISTINCT CASE WHEN u.payer = 1 THEN u.id END) AS payer_count_per_class,--Затем для каждой расы посчитайте количество игроков, 
       																		 --платящий (покупал ли валюту «райские лепестки» )
       COUNT(DISTINCT CASE WHEN e.amount> 0 THEN u.id END) AS purch_user_per_class, --количество игроков, которые совершают внутриигровые покупки
       COUNT(DISTINCT CASE WHEN e.amount> 0 THEN u.id END)::float/COUNT(DISTINCT u.id) AS purch_user_share, -- доля игроков которые совершили покупку 
     																							  --от общего количества
       COUNT(DISTINCT CASE WHEN u.payer = 1 THEN u.id END)::float/COUNT(DISTINCT CASE WHEN e.amount> 0 THEN u.id END) AS payer_user_share_per_purch_user,
        																						-- доля платящих игроков от количества игроков, 
       COUNT(DISTINCT CASE WHEN u.payer = 1 AND amount> 0 THEN u.id END)::float/COUNT(DISTINCT u.id)  AS payer_purch_user_share,-- доля платящих игроков и 
       																										--которые совершили покупки от количества игроков
      	COUNT(DISTINCT CASE WHEN e.amount> 0 THEN e.transaction_id END)/COUNT(DISTINCT CASE WHEN e.amount> 0 THEN u.id END)::float AS total_purch_per_player,
      	sum(e.amount)/ COUNT(DISTINCT CASE WHEN e.amount> 0 THEN e.transaction_id END) AS avg_amount_per_purch,
      	sum(e.amount)/ COUNT(DISTINCT CASE WHEN e.amount> 0 THEN u.id END) AS avg_amount_per_player
FROM fantasy.users AS u
LEFT JOIN fantasy.race AS r USING (race_id)
LEFT JOIN fantasy.events AS e USING (id)
GROUP BY r.race

--race    |total_players|payer_count_per_class|purch_user_per_class|purch_user_share  |payer_user_share_per_purch_user|payer_purch_user_share|total_purch_per_player|avg_amount_per_purch|avg_amount_per_player|
--------+-------------+---------------------+--------------------+------------------+-------------------------------+----------------------+----------------------+--------------------+---------------------+
--Angel   |         1327|                  229|                 820|0.6179351921627732|            0.27926829268292686|   0.10324039186134137|     106.8048780487805|  455.64777346426126|    48665.40487804878|
--Demon   |         1229|                  238|                 737|0.5996745321399511|             0.3229308005427408|   0.11960943856794141|     77.86974219810041|   529.0239066039379|     41194.9552238806|
--Elf     |         2501|                  427|                1543| 0.616953218712515|             0.2767336357744653|   0.10035985605757697|     78.79066753078419|   682.3212199976969|    53760.54439403759|
--Hobbit  |         3648|                  659|                2266|0.6211622807017544|             0.2908208296557811|   0.10992324561403509|      86.1288614298323|   552.9226102639777|    47622.59488084731|
--Human   |         6328|                 1114|                3921|0.6196270543615676|             0.2841111961234379|   0.11156763590391909|    121.40219331803111|   403.0886899234903|    48935.85105840347|
--Northman|         3562|                  626|                2229|0.6257720381807973|            0.28084342754598474|   0.11398090960134756|     82.10183938986093|   761.4887024944674|    62519.62314939435|
--Orc     |         3619|                  636|                2276|0.6289030118817353|            0.27943760984182775|    0.1094224924012158|     81.73813708260106|   510.9307015846395|     41762.5237258348|

--Гипотеза о том, что прохождение игры за персонажей разных рас требует примерно равного количества покупок эпических предметов, частично подтверждается.
--Доля игроков, совершающих покупки, и доля платящих игроков схожи для всех рас, что указывает на отсутствие явных различий в покупательской активности. 
--Однако различия в среднем количестве покупок и сумме трат на одного покупателя могут говорить о том, что представители разных рас тратят разное количество ресурсов на покупку эпических предметов.

-- Задача 2: Частота покупок
--Сначала для каждой покупки посчитайте количество дней с предыдущей покупки — это позволит получить количество дней между покупками.
WITH perch_details AS (
SELECT e.id,e.transaction_id, e.date,
		LAG(date) OVER (PARTITION by e.id ORDER BY date) AS prev_date,
		date::date-lAG(date) OVER (PARTITION by e.id ORDER BY date)::date AS days_between,
		count(e.transaction_id) OVER (PARTITION by e.id ) AS user_pur_num
FROM fantasy.events e 
GROUP BY e.id,e.transaction_id, e.date
HAVING amount<>0),--исключаем покупки с нулевой стоимостью
--Затем для каждого игрока посчитайте общее количество покупок и среднее значение по количеству
-- дней между покупками. 
user_purch AS (
SELECT u.id, payer, --Не забудьте добавить информацию о том, является ли игрок платящим.
		AVG(pd.user_pur_num) AS  user_pur_num,
		COALESCE(AVG(pd.days_between),0) AS avg_days_between --считаем среднее по юзеру и убираем бланки на ноль
FROM perch_details AS Pd
Full JOIN fantasy.users AS u ON u.id=pd.id
GROUP BY u.id, payer
),
--Потом проведите ранжирование игроков по среднему количеству дней между покупками с учётом минимального количества покупок на одного игрока.
--минимальная покупка 1 товар-- ранжируем по всей выборке c фильтром на покупки at least 1 purchase
user_rank AS (
SELECT *,
		NTILE(3) OVER (ORDER BY avg_days_between DESC) AS num_rank
FROM user_purch
WHERE user_pur_num>=25 --. Коллеги из маркетинга также просят учитывать только активных клиентов, которые совершили 25 или более покупок.
ORDER BY avg_days_between DESC
),
--выбираем все ид-ки и добавляем имя рангов
group_name_info AS (
SELECT 	
CASE 
	WHEN ur.num_rank=3
	THEN 'высокая частота'
	WHEN ur.num_rank=2
	THEN 'умеренная частота'
	WHEN ur.num_rank=1
	THEN 'низкая частота'
	ELSE 'N/A'
	END  group_name,
	ur.id, ur.user_pur_num, ur.avg_days_between,ur.num_rank, ur.payer
FROM user_rank AS ur
)
SELECT group_name, 
		Count(id) AS purc_us_num,
		sum(user_pur_num)/Count(id) AS AVG_pur_num_per_user,
		sum(avg_days_between)/Count(id) AS AVG_pur_days_per_user,
		SUM(CASE WHEN payer = 1 THEN 1 ELSE 0 END)/Count(id)::float AS group_SHARE-->>доли платящих игроков от общего количества игроков в сегменте группы
FROM group_name_info
GROUP BY group_name
--group_name       |purc_us_num|avg_pur_num_per_user|avg_pur_days_per_user |group_share        |
-----------------+-----------+--------------------+----------------------+-------------------+
--высокая частота  |       2572|390.6559097978227061|3.29082168663293417419| 0.1839035769828927|
--низкая частота   |       2572| 33.6356920684292379|   13.2901898244553497|0.16835147744945567|
--умеренная частота|       2572| 58.8110419906687403|    7.5353255646750924|0.17534992223950233|


--В результате анализа было выделены три группы по покупкам (высокая частота, умеренная и низкая), с учетом сумма покупки  более 0 и активные клиенты с  25-и более покупками. 
--В соответствии с текущей выбокой в отбор попало 55% всех покупатей (7716 vs 13793).  Стоит отметить что большее количество покупок на человека наблюдается в группе с высокой частотой и не совершивших оплату.
--Среднее количество дней по всем игрокам 8 (у игроков с более высокой частотой выделяется результат ниже среднего, в то время у игроков которые реже совершают покупку увеличивается кол-во дней).
17% игроков совершает покупку и пользуются внутриигровой валютой. В разрезе групп отклонение не наблюдается.
--Возможно имеет смысл разделить стоимость эпических предметов на две цены, где стоимость покупки за игровую валюту будет ниже, для привлечения и увеличения спроса на “райские лепестки”. 

--Общие выводы и рекомендации
--Доля платящих игроков составляет 18%, что является важным индикатором. При этом раса персонажа оказывает влияние на покупательскую активность. 
--Наиболее заметна раса “Demon”, у которого удельный вес платящих игроков выше среднего показателя (20%).
--Анализ внутриигровых покупок показал большое расхождение между медианой и средним значением стоимости покупки, что указывает на сильное влияние крупных покупок на общую статистику.
--Это свидетельствует о наличии сегмента пользователей, готовых к более крупным тратам. Для повышения вовлеченности игроков с низкими расходами можно рассмотреть введение акций или скидок на популярные предметы для более равномерного распределения покупок.
--Аномальные покупки, хотя и составляют менее 1%, требуют дополнительного анализа. Необходимо понять, являются ли они результатом багов, недочетов в игровом процессе или целенаправленным поведением игроков.
--Популярные предметы: "Book of Legends" и "Bag of Holding" занимают лидирующие позиции по продажам и охвату среди игроков.
--Активность игроков по расам показывает, что покупательская активность в разрезе рас не имеет явных различий. 
--Частота покупок позволяет разделить игроков на три группы. Для наиболее активных покупателей стоит рассмотреть специальные предложения, программы лояльности или бонусы за частые покупки. 

